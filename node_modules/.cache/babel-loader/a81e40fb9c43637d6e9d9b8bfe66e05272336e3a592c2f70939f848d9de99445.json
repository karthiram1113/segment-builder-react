{"ast":null,"code":"var _jsxFileName = \"T:\\\\karthi\\\\portfolio-1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport HomeComponent from './components/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleSaveData = data => {\n    // In a real application, you'd make an API call here (e.g., using fetch or axios)\n    // Example of sending data:\n    // fetch('/api/segments', { method: 'POST', body: JSON.stringify(data) })\n\n    // For this demonstration, we'll just log it to the console\n    console.log('✅ Segment data successfully prepared and \"sent\" to server:', data);\n    alert('Segment saved! Check the console for the formatted JSON data.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomeComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Routes","Route","BrowserRouter","ToastContainer","HomeComponent","jsxDEV","_jsxDEV","App","_s","isModalOpen","setIsModalOpen","useState","handleSaveData","data","console","log","alert","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["T:/karthi/portfolio-1/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Routes, Route, BrowserRouter} from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport HomeComponent from './components/Home';\n\nfunction App() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleSaveData = (data) => {\n    // In a real application, you'd make an API call here (e.g., using fetch or axios)\n    // Example of sending data:\n    // fetch('/api/segments', { method: 'POST', body: JSON.stringify(data) })\n\n    // For this demonstration, we'll just log it to the console\n    console.log('✅ Segment data successfully prepared and \"sent\" to server:', data);\n    alert('Segment saved! Check the console for the formatted JSON data.');\n  };\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<HomeComponent />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,MAAM,EAAEC,KAAK,EAAEC,aAAa,QAAO,kBAAkB;AAC9D,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAOC,aAAa,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/B;IACA;IACA;;IAEA;IACAC,OAAO,CAACC,GAAG,CAAC,4DAA4D,EAAEF,IAAI,CAAC;IAC/EG,KAAK,CAAC,+DAA+D,CAAC;EACxE,CAAC;EACD,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBZ,OAAA,CAACJ,aAAa;MAAAgB,QAAA,eACZZ,OAAA,CAACN,MAAM;QAAAkB,QAAA,eACLZ,OAAA,CAACL,KAAK;UAACkB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEd,OAAA,CAACF,aAAa;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAAChB,EAAA,CArBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}