{"ast":null,"code":"var _jsxFileName = \"T:\\\\karthi\\\\portfolio-1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport HomeComponent from './components/Home';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleSaveData = data => {\n    // In a real application, you'd make an API call here (e.g., using fetch or axios)\n    // Example of sending data:\n    // fetch('/api/segments', { method: 'POST', body: JSON.stringify(data) })\n\n    // For this demonstration, we'll just log it to the console\n    console.log('✅ Segment data successfully prepared and \"sent\" to server:', data);\n    alert('Segment saved! Check the console for the formatted JSON data.');\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    //   <BrowserRouter>\n    //     <Routes>\n    //       <Route path=\"/\" element={<HomeComponent />} />\n    //     </Routes>\n    //   </BrowserRouter>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"View Audience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-save-btn\",\n        onClick: () => setIsModalOpen(true),\n        children: \"Save segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SegmentModal, {\n        isVisible: isModalOpen,\n        onClose: () => setIsModalOpen(false),\n        onSave: handleSaveData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Routes","Route","BrowserRouter","ToastContainer","HomeComponent","useState","jsxDEV","_jsxDEV","App","_s","isModalOpen","setIsModalOpen","handleSaveData","data","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SegmentModal","isVisible","onClose","onSave","_c","$RefreshReg$"],"sources":["T:/karthi/portfolio-1/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Routes, Route, BrowserRouter} from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport HomeComponent from './components/Home';\nimport { useState } from 'react';\n\nfunction App() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleSaveData = (data) => {\n    // In a real application, you'd make an API call here (e.g., using fetch or axios)\n    // Example of sending data:\n    // fetch('/api/segments', { method: 'POST', body: JSON.stringify(data) })\n\n    // For this demonstration, we'll just log it to the console\n    console.log('✅ Segment data successfully prepared and \"sent\" to server:', data);\n    alert('Segment saved! Check the console for the formatted JSON data.');\n  };\n  return (\n    // <div className=\"App\">\n    //   <BrowserRouter>\n    //     <Routes>\n    //       <Route path=\"/\" element={<HomeComponent />} />\n    //     </Routes>\n    //   </BrowserRouter>\n    // </div>\n    <div className=\"app-container\">\n      <h1>View Audience</h1>\n\n      {/* 1. Button caption \"Save segment\" */}\n      <button\n        className=\"main-save-btn\"\n        onClick={() => setIsModalOpen(true)}\n      >\n        Save segment\n      </button>\n\n      {/* 2. Popup component */}\n      <SegmentModal\n        isVisible={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onSave={handleSaveData}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,MAAM,EAAEC,KAAK,EAAEC,aAAa,QAAO,kBAAkB;AAC9D,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMO,cAAc,GAAIC,IAAI,IAAK;IAC/B;IACA;IACA;;IAEA;IACAC,OAAO,CAACC,GAAG,CAAC,4DAA4D,EAAEF,IAAI,CAAC;IAC/EG,KAAK,CAAC,+DAA+D,CAAC;EACxE,CAAC;EACD;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACAT,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BX,OAAA;QAAAW,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGtBf,OAAA;QACEU,SAAS,EAAC,eAAe;QACzBM,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,IAAI,CAAE;QAAAO,QAAA,EACrC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGTf,OAAA,CAACiB,YAAY;QACXC,SAAS,EAAEf,WAAY;QACvBgB,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAAC,KAAK,CAAE;QACrCgB,MAAM,EAAEf;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;AAEV;AAACb,EAAA,CAvCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}